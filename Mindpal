from fastapi import FastAPI, HTTPException, Request
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import HTMLResponse  # Add this import
from pydantic import BaseModel
import requests
import json
import logging
from typing import Dict, Optional

# Initialize FastAPI app
app = FastAPI(title="Mindpal Chatbot Integration")

# Configure CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Mindpal configuration
MINDPAL_IFRAME_URL = "<iframe 
  src=https://chatbot.getmindpal.com/budgeting-tutor-for-kids
  allow="clipboard-read; clipboard-write; microphone"
  style="width: 100%; height: 100%; min-height: 700px"
></iframe>v"  # Get this from Mindpal's "Iframe" section
MIND_PAL_API_URL = "https://api.mindpal.io/v1/chat"  # Keep this if you still want API option
MIND_PAL_API_KEY = "your_mindpal_api_key_here"  # Optional if using iframe
BUDGETING_MODULE_ID = "your_budgeting_module_id_here"

# ========== NEW IFRAME ENDPOINT ==========
@app.get("/chat-embed", response_class=HTMLResponse)
async def embed_chatbot():
    """Serves HTML page with embedded Mindpal chatbot"""
    return f"""
    <!DOCTYPE html>
    <html>
    <head>
        <title>Budgeting Tutor</title>
        <style>
            body {{
                font-family: Arial, sans-serif;
                max-width: 1200px;
                margin: 0 auto;
                padding: 20px;
            }}
            .chat-container {{
                border: 1px solid #ddd;
                border-radius: 8px;
                overflow: hidden;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }}
            h1 {{
                color: #2c3e50;
                text-align: center;
            }}
        </style>
    </head>
    <body>
        <h1>Budgeting Tutor for Kids</h1>
        <div class="chat-container">
            <iframe 
                src="{MINDPAL_IFRAME_URL}" 
                width="100%" 
                height="600px"
                frameborder="0"
                allow="microphone"
                title="Budgeting Tutor Chatbot">
            </iframe>
        </div>
    </body>
    </html>
    """

# ========== KEEP YOUR EXISTING API ENDPOINTS ==========
# Models
class UserMessage(BaseModel):
    user_id: str
    message: str
    module_id: Optional[str] = BUDGETING_MODULE_ID
    context: Optional[Dict] = None

class MindpalResponse(BaseModel):
    response: Dict
    context: Optional[Dict] = None
    message_type: Optional[str] = None

# Helper function to call Mindpal API
async def call_mindpal_api(payload: Dict) -> Dict:
    headers = {
        "Authorization": f"Bearer {MIND_PAL_API_KEY}",
        "Content-Type": "application/json"
    }
    
    try:
        response = requests.post(
            MIND_PAL_API_URL,
            headers=headers,
            json=payload,
            timeout=30
        )
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        logger.error(f"Mindpal API call failed: {str(e)}")
        raise HTTPException(status_code=500, detail="Failed to communicate with Mindpal API")

# All your existing endpoints remain unchanged below...
# @app.post("/chat", response_model=MindpalResponse)
# @app.post("/submit-quiz")
# @app.post("/update-materials")
# ... (keep all your existing endpoint functions)

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
